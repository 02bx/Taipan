namespace ES.Taipan.VulnerabilityEditor

open System

[<AutoOpen>]
module internal ConsoleUtility =
    let readLineWithDefault(msg: String, defaultValue: String)  =    
        let mutable readValue = String.Empty

        while String.IsNullOrWhiteSpace(readValue) do
            // print message
            if String.IsNullOrWhiteSpace(defaultValue) then
                Console.Write(String.Format("{0}: ", msg))
            else
                Console.Write(String.Format("{0}: [{1}] ", msg, defaultValue))

            // read value
            readValue <- Console.ReadLine()
            if String.IsNullOrWhiteSpace(readValue) then
                if String.IsNullOrWhiteSpace(defaultValue) then
                    Console.Error.WriteLine("Invalid value, please enter a valid one!")
                else
                    readValue <- defaultValue
        readValue

    let readLine(msg: String) =
        readLineWithDefault(msg, String.Empty)

    let printMenu() =
        Console.WriteLine("""
    -= Operations =-
    1. Print all loaded applications
    2. Print all versions of a specific application
    3. Print all vulnerabilities of a specific application
    4. Add a new vuln to an existing application
    5. Exit
    """)

    let printBanner() =
        Console.ForegroundColor <- ConsoleColor.Cyan        
        let banner = "-=[ Taipan Vulnerability Editor ]=-"
        let year = if DateTime.Now.Year = 2017 then "2017" else String.Format("2017-{0}", DateTime.Now.Year)
        let copy = String.Format("Copyright (c) {0} Enkomio {1}", year, Environment.NewLine)
        Console.WriteLine(banner)
        Console.WriteLine(copy)
        Console.ResetColor()

    let readCommand() =
        let mutable commandStr = readLine("Command")
        let command = ref 0
        while not <| Int32.TryParse(commandStr, command) do
            Console.WriteLine("Wrong command, please specify a valid number")
            commandStr <- readLine("Command")
        !command
