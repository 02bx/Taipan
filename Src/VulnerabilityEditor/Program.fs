namespace ES.Taipan.VulnerabilityEditor

open System
open System.IO
open System.Configuration
open ES.Taipan.Fingerprinter
open ES.Fslog

module Program =

    [<EntryPoint>]
    let main argv =
        printBanner()
        
        // get data directory
        let confDataDirectory = Path.GetFullPath(ConfigurationManager.AppSettings.["dataDirectory"])
        let dataDirectory = readLineWithDefault("Data directory (where the signature are stored)", confDataDirectory)

        // load all signatures
        Console.WriteLine("Search Data directory in: " + dataDirectory)
        Console.Write("Load web applications...")
        let fingerprintRepo = new FilesystemWebApplicationFingerprintRepository(dataDirectory, LogProvider.GetDefault())
        fingerprintRepo.LoadSignatures(getAllSupportedLanguageNames(), fun () -> false)    
        Console.WriteLine("Done. {0} apps loaded.", fingerprintRepo.GetAllWebApplications() |> Seq.length)
        
        // start main loops
        let mutable endApplication = false
        while not endApplication do
            printMenu()
            match readCommand() with
            | 1 -> printAllApplications(fingerprintRepo)
            | 2 -> printAllVersions(fingerprintRepo)
            | 3 -> printAllVvulnerabilities(dataDirectory, fingerprintRepo)
            | 4 -> insertVulnerability(dataDirectory, fingerprintRepo)
            | 5 -> endApplication <- true
            | _ -> ()
        0