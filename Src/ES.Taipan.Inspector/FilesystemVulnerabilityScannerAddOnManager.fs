namespace ES.Taipan.Inspector

open System
open System.IO
open System.Reflection
open System.Collections.Generic
open System.ComponentModel.Composition
open System.ComponentModel.Composition.Hosting
open ES.Taipan.Infrastructure.Network
open ES.Taipan.Infrastructure.Messaging
open ES.Taipan.Infrastructure.Service
open ES.Fslog

type FilesystemVulnerabilityScannerAddOnManager(messageBroker: IMessageBroker, logProvider: ILogProvider) as this =

    [<ImportMany(AllowRecomposition=true)>]
    let mutable _addOns: IEnumerable<IVulnerabilityScannerAddOn> = Seq.empty
    let _loadedAddOns = new List<IVulnerabilityScannerAddOn>()
    let _logger = 
        log "FilesystemVulnerabilityScannerAddOnManager"
        |> verbose "LoadedAddOn" "Loaded vulnerability scanner addOn: {0}"
        |> build

    do logProvider.AddLogSourceToLoggers(_logger)
    
    let addSecurityIssue(securityIssue: SecurityIssue) =
        messageBroker.Dispatch(this, new NewSecurityIssueFoundMessage(securityIssue))
                                
    member this.LoadAddOns() =
        try 
            _addOns <- Seq.empty
            _loadedAddOns.Clear()
             
            // load all AddOns     
            let catalog = new DirectoryCatalog(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location), "ES.Taipan.Inspector.*.dll")
           
            // compose parts
            let container = new CompositionContainer(catalog)          
            container.ComposeParts(this)
                                    
            _addOns
            |> Seq.iter (fun addOn ->
                _loadedAddOns.Add(addOn)
                _logger?LoadedAddOn(addOn.Name)
            )
        with 
            | _ as e -> 
                reraise()

    member this.GetAddOns() =
        _loadedAddOns
        |> Seq.toList

    member this.GetAddOn(addOnId: Guid) =
        this.GetAddOns()
        |> Seq.tryFind(fun addOn -> addOn.Id = addOnId)

    interface IVulnerabilityScannerAddOnManager with
        member this.LoadAddOns() =
            this.LoadAddOns()

        member this.GetAddOns() =
            this.GetAddOns()

        member this.GetAddOn(addOnId: Guid) =
            this.GetAddOn(addOnId)
